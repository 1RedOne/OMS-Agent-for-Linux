%Variables
SHELL_HEADER:            '#!/bin/sh'
OMSHOME:                 '/opt/microsoft/omsagent'
SUDO_LOC:                '/etc/opt/microsoft/omsagent/conf/sudodir'
SUDO_DIR:                '/usr/bin'

SHORT_NAME:              'omsagent'
SHORT_NAME_PREFIX:       'MSFT'
LONG_NAME:               'Microsoft Operations Management Suite for UNIX/Linux agent'
GROUP:                   'Applications/System'
LICENSE:                 'none'
VENDOR:                  'http://www.microsoft.com'
PROVIDES:                'omsuploads'
DESCRIPTION:             'Provides agent for the Microsoft Operations Management Suite.'
MAINTAINER:              'Microsoft Corporation'

%Defines

%Files
/etc/opt/microsoft/omsagent/sysconf/README;                             installer/conf/sysconf.readme;                         644; root; root
/etc/opt/microsoft/omsagent/sysconf/omsagent.conf;                      installer/conf/omsagent.conf;                          644; root; root
/etc/opt/microsoft/omsagent/sysconf/installinfo.txt;                    installer/conf/installinfo.txt;                        644; root; root; conffile
/opt/microsoft/omsagent/fluent-plugin/in_omi.rb;                        source/code/plugins/in_omi.rb;                         744; root; root
/opt/microsoft/omsagent/fluent-plugin/Libomi.so;                        intermediate/${{BUILD_CONFIGURATION}}/Libomi.so;       744; root; root
/opt/microsoft/omsagent/fluent-plugin/filter_nagios_log.rb;             source/code/plugins/filter_nagios_log.rb;              744; root; root
/opt/microsoft/omsagent/fluent-plugin/nagios_parser_lib.rb;             source/code/plugins/nagios_parser_lib.rb;              744; root; root
/opt/microsoft/omsagent/bin/omsadmin.sh;                                source/code/maintenance/omsadmin.sh;                   744; root; root

%Links
/opt/microsoft/omsagent/bin/omsagent; /opt/microsoft/omsagent/ruby/bin/fluentd; 755; root; root


%Directories
/opt;                                                   755; root; root; sysdir
/etc;                                                   755; root; root; sysdir
/etc/opt;                                               755; root; root; sysdir
/var;                                                   755; root; root; sysdir
/var/opt;                                               755; root; root; sysdir

/etc/opt/microsoft;                                     755; root; root
/etc/opt/microsoft/omsagent;                            755; root; root
/etc/opt/microsoft/omsagent/certs;                      755; root; root
/etc/opt/microsoft/omsagent/sysconf;                    755; root; root

/opt/microsoft;                                         755; root; root
/opt/microsoft/omsagent;                                755; root; root
/opt/microsoft/omsagent/bin;                            755; root; root
/opt/microsoft/omsagent/fluent-plugin;                  755; root; root

/var/opt/microsoft;                                     755; root; root

%Dependencies

%CheckIfOmiIsRunning
OMI_IS_RUNNING=1
if [ -f /var/opt/omi/run/omiserver.pid ]; then
    #  Check if omiserver is running with this pid.
    omi_pid=`cat /var/opt/omi/run/omiserver.pid`
    ps -aef | grep $omi_pid | grep omiserver 1> /dev/null 2> /dev/null
    if [ $? -ne 0 ]; then
	OMI_IS_RUNNING=0
    fi
else
    OMI_IS_RUNNING=0
fi

%Postinstall_100
WriteInstallInfo() {
    date +%Y-%m-%dT%T.0Z > /etc/opt/microsoft/omsagent/sysconf/installinfo.txt
    echo ${{VERSION}}-${{RELEASE}} >> /etc/opt/microsoft/omsagent/sysconf/installinfo.txt
}
WriteInstallInfo

# Can't use normal mechanisms to create /var directories because they must be
# owned by omsagent account. So create them as part of Postinstall, after the
# service account is created.

mkdir -m 755 /var/opt/microsoft/omsagent        2> /dev/null || true
mkdir -m 755 /var/opt/microsoft/omsagent/log    2> /dev/null || true
mkdir -m 755 /var/opt/microsoft/omsagent/run    2> /dev/null || true
mkdir -m 755 /var/opt/microsoft/omsagent/tmp    2> /dev/null || true

chown -R omsagent:omsagent /var/opt/microsoft/omsagent

# Ditto for conf directory in /etc/opt/microsoft/omsagent/conf ...

mkdir -m 755 /etc/opt/microsoft/omsagent/conf   2> /dev/null || true
if [ ! -f /etc/opt/microsoft/omsagent/conf ]; then
   cp /etc/opt/microsoft/omsagent/sysconf/omsagent.conf /etc/opt/microsoft/omsagent/conf
fi

chown -R omsagent:omsagent /etc/opt/microsoft/omsagent/conf

%Postuninstall_10
# Calling sequence for RPM pre/post scripts, during upgrade, is as follows:
#   1. Run the %pre section of the RPM being installed.
#   2. Install the files that the RPM provides.
#   3. Run the %post section of the RPM.
#   4. Run the %preun of the old package.
#   5. Delete any old files not overwritten by the newer version.
#      (This step deletes files that the new package does not require.)
#   6. Run the %postun hook of the old package.
#
# Thus, if we're an upgrade, skip all of this cleanup
if ${{PERFORMING_UPGRADE_NOT}}; then 
   # Clean up /var directory tree (created via PostInstall) if dirs are empty
   rmdir /var/opt/microsoft/omsagent/tmp 2> /dev/null
   rmdir /var/opt/microsoft/omsagent/run 2> /dev/null
   rmdir /var/opt/microsoft/omsagent/log 2> /dev/null
   rmdir /var/opt/microsoft/omsagent 2> /dev/null

   # Clean up installinfo.txt file (registered as "conf" file to pass rpmcheck)
   rm -f /etc/opt/microsoft/omsagent/sysconf/installinfo.txt*
   rmdir /etc/opt/microsoft/omsagent/sysconf 2> /dev/null
   rmdir /etc/opt/microsoft/omsagent 2> /dev/null
   rmdir /etc/opt/microsoft 2> /dev/null
   rmdir /etc/opt 2> /dev/null
fi

%Preinstall_0
${{SHELL_HEADER}}
%Postinstall_0
${{SHELL_HEADER}}
%Preuninstall_0
${{SHELL_HEADER}}
%Postuninstall_0
${{SHELL_HEADER}}
